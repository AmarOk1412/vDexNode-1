# Makefile.in generated by automake 1.15.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/opendht
pkgincludedir = $(includedir)/opendht
pkglibdir = $(libdir)/opendht
pkglibexecdir = $(libexecdir)/opendht
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#am__append_1 = rng.cpp
#am__append_2 = dht_proxy_server.cpp
#am__append_3 = ../include/opendht/dht_proxy_server.h
#am__append_4 = dht_proxy_client.cpp
#am__append_5 = ../include/opendht/dht_proxy_client.h ../include/opendht/dht_interface.h
#am__append_6 = ../include/opendht/proxy.h
am__append_7 = indexation/pht.cpp
am__append_8 = ../include/opendht/indexation/pht.h
libopendht_la_DEPENDENCIES =
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__nobase_include_HEADERS_DIST) \
	$(am__noinst_HEADERS_DIST) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libargon2_la_LIBADD =
am__libargon2_la_SOURCES_DIST = ../argon2/src/argon2.c \
	../argon2/src/core.c \
	../argon2/src/blake2/blake2b.c \
	../argon2/src/thread.c \
	../argon2/src/ref.c \
	../argon2/src/encoding.c
am__dirstamp = $(am__leading_dot)dirstamp
#am_libargon2_la_OBJECTS = ../argon2/src/libargon2_la-argon2.lo \
#	../argon2/src/libargon2_la-core.lo \
#	../argon2/src/blake2/libargon2_la-blake2b.lo \
#	../argon2/src/libargon2_la-thread.lo \
#	../argon2/src/libargon2_la-ref.lo \
#	../argon2/src/libargon2_la-encoding.lo
libargon2_la_OBJECTS = $(am_libargon2_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libargon2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(libargon2_la_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#am_libargon2_la_rpath =
am__libopendht_la_SOURCES_DIST = dht.cpp storage.h listener.h \
	request.h search.h value_cache.h op_cache.h op_cache.cpp net.h \
	parsed_message.h node_cache.cpp callbacks.cpp \
	routing_table.cpp network_engine.cpp utils.cpp infohash.cpp \
	node.cpp value.cpp crypto.cpp securedht.cpp dhtrunner.cpp \
	default_types.cpp log.cpp peer_discovery.cpp network_utils.h \
	network_utils.cpp thread_pool.cpp rng.cpp dht_proxy_server.cpp \
	dht_proxy_client.cpp base64.h base64.cpp indexation/pht.cpp
#am__objects_1 = libopendht_la-rng.lo
#am__objects_2 =  \
#	libopendht_la-dht_proxy_server.lo
#am__objects_3 =  \
#	libopendht_la-dht_proxy_client.lo
am__objects_4 =  \
	indexation/libopendht_la-pht.lo
am_libopendht_la_OBJECTS = libopendht_la-dht.lo \
	libopendht_la-op_cache.lo libopendht_la-node_cache.lo \
	libopendht_la-callbacks.lo libopendht_la-routing_table.lo \
	libopendht_la-network_engine.lo libopendht_la-utils.lo \
	libopendht_la-infohash.lo libopendht_la-node.lo \
	libopendht_la-value.lo libopendht_la-crypto.lo \
	libopendht_la-securedht.lo libopendht_la-dhtrunner.lo \
	libopendht_la-default_types.lo libopendht_la-log.lo \
	libopendht_la-peer_discovery.lo libopendht_la-network_utils.lo \
	libopendht_la-thread_pool.lo $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) libopendht_la-base64.lo $(am__objects_4)
libopendht_la_OBJECTS = $(am_libopendht_la_OBJECTS)
libopendht_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libopendht_la_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/ac/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libargon2_la_SOURCES) $(libopendht_la_SOURCES)
DIST_SOURCES = $(am__libargon2_la_SOURCES_DIST) \
	$(am__libopendht_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__nobase_include_HEADERS_DIST = ../include/opendht.h \
	../include/opendht/def.h ../include/opendht/dht.h \
	../include/opendht/callbacks.h ../include/opendht/node_cache.h \
	../include/opendht/routing_table.h \
	../include/opendht/network_engine.h \
	../include/opendht/scheduler.h \
	../include/opendht/rate_limiter.h ../include/opendht/utils.h \
	../include/opendht/sockaddr.h ../include/opendht/infohash.h \
	../include/opendht/node.h ../include/opendht/value.h \
	../include/opendht/crypto.h ../include/opendht/securedht.h \
	../include/opendht/dhtrunner.h \
	../include/opendht/default_types.h ../include/opendht/log.h \
	../include/opendht/log_enable.h \
	../include/opendht/peer_discovery.h ../include/opendht/rng.h \
	../include/opendht/thread_pool.h \
	../include/opendht/dht_proxy_server.h \
	../include/opendht/dht_proxy_client.h \
	../include/opendht/dht_interface.h ../include/opendht/proxy.h \
	../include/opendht/indexation/pht.h
am__noinst_HEADERS_DIST = ../argon2/include/argon2.h \
	../argon2/src/blake2/blake2.h \
	../argon2/src/blake2/blake2-impl.h \
	../argon2/src/blake2/blamka-round-ref.h \
	../argon2/src/core.h \
	../argon2/src/encoding.h \
	../argon2/src/thread.h
HEADERS = $(nobase_include_HEADERS) $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/ac/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/sylvain/vDexNetwork/vDexNode/ac/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/sylvain/vDexNetwork/vDexNode/ac/missing autoconf
AUTOHEADER = ${SHELL} /home/sylvain/vDexNetwork/vDexNode/ac/missing autoheader
AUTOMAKE = ${SHELL} /home/sylvain/vDexNetwork/vDexNode/ac/missing automake-1.15
AWK = gawk
Argon2_CFLAGS = 
Argon2_LDFLAGS = 
Argon2_LIBS = -largon2 -lrt -ldl
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =  -DOPENDHT_JSONCPP=1
CURRENT_BINARY_DIR = .
CURRENT_SOURCE_DIR = .
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -O3 -pedantic-errors -DMSGPACK_DISABLE_LEGACY_NIL -DMSGPACK_DISABLE_LEGACY_CONVERT
CYGPATH_W = echo
CppUnit_CFLAGS = 
CppUnit_LIBS = 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DOXYGEN = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
GnuTLS_CFLAGS = -I/usr/include/p11-kit-1
GnuTLS_LIBS = -lgnutls
HAVE_CXX11 = 1
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JsonCpp_CFLAGS = -I/usr/include/jsoncpp
JsonCpp_LIBS = -ljsoncpp
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  -lpthread
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/sylvain/vDexNetwork/vDexNode/ac/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MsgPack_CFLAGS = 
MsgPack_LIBS = -lmsgpackc
NM = /usr/bin/nm -B
NMEDIT = 
Nettle_CFLAGS = 
Nettle_LIBS = -lnettle
OBJDUMP = objdump
OBJEXT = o
OPENDHT_MAJOR_VERSION = 1
OPENDHT_MINOR_VERSION = 9
OPENDHT_PATCH_VERSION = 4
OTOOL = 
OTOOL64 = 
PACKAGE = opendht
PACKAGE_BUGREPORT = 
PACKAGE_NAME = opendht
PACKAGE_STRING = opendht 1.9.4
PACKAGE_TARNAME = opendht
PACKAGE_URL = 
PACKAGE_VERSION = 1.9.4
PATH_SEPARATOR = :
PIP = pip3
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PROGRAMFILES = 
PROJECT_BINARY_DIR = ../src/.libs
PROJECT_SOURCE_DIR = ..
PYTHON = /usr/bin/python3
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 3.6
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.9.4
WINDOWS_ARCH = 
abs_builddir = /home/sylvain/vDexNetwork/vDexNode/src
abs_srcdir = /home/sylvain/vDexNetwork/vDexNode/src
abs_top_builddir = /home/sylvain/vDexNetwork/vDexNode
abs_top_srcdir = /home/sylvain/vDexNetwork/vDexNode
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
argon2_lib = , libargon2
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/sylvain/vDexNetwork/vDexNode/ac/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/opendht
pkgpythondir = ${pythondir}/opendht
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib/python3.6/site-packages
pythondir = ${prefix}/lib/python3.6/site-packages
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
lib_LTLIBRARIES = libopendht.la
libopendht_la_CPPFLAGS =  -DOPENDHT_JSONCPP=1 -I$(top_srcdir)/include/opendht  -I/usr/include/jsoncpp 
libopendht_la_LIBADD = -largon2 -lrt -ldl -ljsoncpp -lgnutls -lnettle
libopendht_la_LDFLAGS =  -lpthread  -version-number 1:9:4
libopendht_la_SOURCES = dht.cpp storage.h listener.h request.h \
	search.h value_cache.h op_cache.h op_cache.cpp net.h \
	parsed_message.h node_cache.cpp callbacks.cpp \
	routing_table.cpp network_engine.cpp utils.cpp infohash.cpp \
	node.cpp value.cpp crypto.cpp securedht.cpp dhtrunner.cpp \
	default_types.cpp log.cpp peer_discovery.cpp network_utils.h \
	network_utils.cpp thread_pool.cpp $(am__append_1) \
	$(am__append_2) $(am__append_4) base64.h base64.cpp \
	$(am__append_7)
nobase_include_HEADERS = ../include/opendht.h ../include/opendht/def.h \
	../include/opendht/dht.h ../include/opendht/callbacks.h \
	../include/opendht/node_cache.h \
	../include/opendht/routing_table.h \
	../include/opendht/network_engine.h \
	../include/opendht/scheduler.h \
	../include/opendht/rate_limiter.h ../include/opendht/utils.h \
	../include/opendht/sockaddr.h ../include/opendht/infohash.h \
	../include/opendht/node.h ../include/opendht/value.h \
	../include/opendht/crypto.h ../include/opendht/securedht.h \
	../include/opendht/dhtrunner.h \
	../include/opendht/default_types.h ../include/opendht/log.h \
	../include/opendht/log_enable.h \
	../include/opendht/peer_discovery.h ../include/opendht/rng.h \
	../include/opendht/thread_pool.h $(am__append_3) \
	$(am__append_5) $(am__append_6) $(am__append_8)

######################
#  ARGON2 submodule  #
######################
#noinst_LTLIBRARIES = libargon2.la
#libopendht_la_DEPENDENCIES = libargon2.la
#libargon2_la_CFLAGS = -std=c89 -fPIC -pthread -O3 -Wall -I../argon2/include -I../argon2/src
#libargon2_la_SOURCES = \
#        ../argon2/src/argon2.c \
#        ../argon2/src/core.c \
#        ../argon2/src/blake2/blake2b.c \
#        ../argon2/src/thread.c \
#        ../argon2/src/ref.c \
#        ../argon2/src/encoding.c

#noinst_HEADERS = \
#        ../argon2/include/argon2.h \
#        ../argon2/src/blake2/blake2.h \
#        ../argon2/src/blake2/blake2-impl.h \
#        ../argon2/src/blake2/blamka-round-ref.h \
#        ../argon2/src/core.h \
#        ../argon2/src/encoding.h \
#        ../argon2/src/thread.h

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
../argon2/src/$(am__dirstamp):
	@$(MKDIR_P) ../argon2/src
	@: > ../argon2/src/$(am__dirstamp)
../argon2/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../argon2/src/$(DEPDIR)
	@: > ../argon2/src/$(DEPDIR)/$(am__dirstamp)
../argon2/src/libargon2_la-argon2.lo:  \
	../argon2/src/$(am__dirstamp) \
	../argon2/src/$(DEPDIR)/$(am__dirstamp)
../argon2/src/libargon2_la-core.lo:  \
	../argon2/src/$(am__dirstamp) \
	../argon2/src/$(DEPDIR)/$(am__dirstamp)
../argon2/src/blake2/$(am__dirstamp):
	@$(MKDIR_P) ../argon2/src/blake2
	@: > ../argon2/src/blake2/$(am__dirstamp)
../argon2/src/blake2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../argon2/src/blake2/$(DEPDIR)
	@: > ../argon2/src/blake2/$(DEPDIR)/$(am__dirstamp)
../argon2/src/blake2/libargon2_la-blake2b.lo:  \
	../argon2/src/blake2/$(am__dirstamp) \
	../argon2/src/blake2/$(DEPDIR)/$(am__dirstamp)
../argon2/src/libargon2_la-thread.lo:  \
	../argon2/src/$(am__dirstamp) \
	../argon2/src/$(DEPDIR)/$(am__dirstamp)
../argon2/src/libargon2_la-ref.lo:  \
	../argon2/src/$(am__dirstamp) \
	../argon2/src/$(DEPDIR)/$(am__dirstamp)
../argon2/src/libargon2_la-encoding.lo:  \
	../argon2/src/$(am__dirstamp) \
	../argon2/src/$(DEPDIR)/$(am__dirstamp)

libargon2.la: $(libargon2_la_OBJECTS) $(libargon2_la_DEPENDENCIES) $(EXTRA_libargon2_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libargon2_la_LINK) $(am_libargon2_la_rpath) $(libargon2_la_OBJECTS) $(libargon2_la_LIBADD) $(LIBS)
indexation/$(am__dirstamp):
	@$(MKDIR_P) indexation
	@: > indexation/$(am__dirstamp)
indexation/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) indexation/$(DEPDIR)
	@: > indexation/$(DEPDIR)/$(am__dirstamp)
indexation/libopendht_la-pht.lo: indexation/$(am__dirstamp) \
	indexation/$(DEPDIR)/$(am__dirstamp)

libopendht.la: $(libopendht_la_OBJECTS) $(libopendht_la_DEPENDENCIES) $(EXTRA_libopendht_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libopendht_la_LINK) -rpath $(libdir) $(libopendht_la_OBJECTS) $(libopendht_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../argon2/src/*.$(OBJEXT)
	-rm -f ../argon2/src/*.lo
	-rm -f ../argon2/src/blake2/*.$(OBJEXT)
	-rm -f ../argon2/src/blake2/*.lo
	-rm -f indexation/*.$(OBJEXT)
	-rm -f indexation/*.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libopendht_la-base64.Plo
include ./$(DEPDIR)/libopendht_la-callbacks.Plo
include ./$(DEPDIR)/libopendht_la-crypto.Plo
include ./$(DEPDIR)/libopendht_la-default_types.Plo
include ./$(DEPDIR)/libopendht_la-dht.Plo
include ./$(DEPDIR)/libopendht_la-dht_proxy_client.Plo
include ./$(DEPDIR)/libopendht_la-dht_proxy_server.Plo
include ./$(DEPDIR)/libopendht_la-dhtrunner.Plo
include ./$(DEPDIR)/libopendht_la-infohash.Plo
include ./$(DEPDIR)/libopendht_la-log.Plo
include ./$(DEPDIR)/libopendht_la-network_engine.Plo
include ./$(DEPDIR)/libopendht_la-network_utils.Plo
include ./$(DEPDIR)/libopendht_la-node.Plo
include ./$(DEPDIR)/libopendht_la-node_cache.Plo
include ./$(DEPDIR)/libopendht_la-op_cache.Plo
include ./$(DEPDIR)/libopendht_la-peer_discovery.Plo
include ./$(DEPDIR)/libopendht_la-rng.Plo
include ./$(DEPDIR)/libopendht_la-routing_table.Plo
include ./$(DEPDIR)/libopendht_la-securedht.Plo
include ./$(DEPDIR)/libopendht_la-thread_pool.Plo
include ./$(DEPDIR)/libopendht_la-utils.Plo
include ./$(DEPDIR)/libopendht_la-value.Plo
include ../argon2/src/$(DEPDIR)/libargon2_la-argon2.Plo
include ../argon2/src/$(DEPDIR)/libargon2_la-core.Plo
include ../argon2/src/$(DEPDIR)/libargon2_la-encoding.Plo
include ../argon2/src/$(DEPDIR)/libargon2_la-ref.Plo
include ../argon2/src/$(DEPDIR)/libargon2_la-thread.Plo
include ../argon2/src/blake2/$(DEPDIR)/libargon2_la-blake2b.Plo
include indexation/$(DEPDIR)/libopendht_la-pht.Plo

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

../argon2/src/libargon2_la-argon2.lo: ../argon2/src/argon2.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -MT ../argon2/src/libargon2_la-argon2.lo -MD -MP -MF ../argon2/src/$(DEPDIR)/libargon2_la-argon2.Tpo -c -o ../argon2/src/libargon2_la-argon2.lo `test -f '../argon2/src/argon2.c' || echo '$(srcdir)/'`../argon2/src/argon2.c
	$(AM_V_at)$(am__mv) ../argon2/src/$(DEPDIR)/libargon2_la-argon2.Tpo ../argon2/src/$(DEPDIR)/libargon2_la-argon2.Plo
#	$(AM_V_CC)source='../argon2/src/argon2.c' object='../argon2/src/libargon2_la-argon2.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -c -o ../argon2/src/libargon2_la-argon2.lo `test -f '../argon2/src/argon2.c' || echo '$(srcdir)/'`../argon2/src/argon2.c

../argon2/src/libargon2_la-core.lo: ../argon2/src/core.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -MT ../argon2/src/libargon2_la-core.lo -MD -MP -MF ../argon2/src/$(DEPDIR)/libargon2_la-core.Tpo -c -o ../argon2/src/libargon2_la-core.lo `test -f '../argon2/src/core.c' || echo '$(srcdir)/'`../argon2/src/core.c
	$(AM_V_at)$(am__mv) ../argon2/src/$(DEPDIR)/libargon2_la-core.Tpo ../argon2/src/$(DEPDIR)/libargon2_la-core.Plo
#	$(AM_V_CC)source='../argon2/src/core.c' object='../argon2/src/libargon2_la-core.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -c -o ../argon2/src/libargon2_la-core.lo `test -f '../argon2/src/core.c' || echo '$(srcdir)/'`../argon2/src/core.c

../argon2/src/blake2/libargon2_la-blake2b.lo: ../argon2/src/blake2/blake2b.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -MT ../argon2/src/blake2/libargon2_la-blake2b.lo -MD -MP -MF ../argon2/src/blake2/$(DEPDIR)/libargon2_la-blake2b.Tpo -c -o ../argon2/src/blake2/libargon2_la-blake2b.lo `test -f '../argon2/src/blake2/blake2b.c' || echo '$(srcdir)/'`../argon2/src/blake2/blake2b.c
	$(AM_V_at)$(am__mv) ../argon2/src/blake2/$(DEPDIR)/libargon2_la-blake2b.Tpo ../argon2/src/blake2/$(DEPDIR)/libargon2_la-blake2b.Plo
#	$(AM_V_CC)source='../argon2/src/blake2/blake2b.c' object='../argon2/src/blake2/libargon2_la-blake2b.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -c -o ../argon2/src/blake2/libargon2_la-blake2b.lo `test -f '../argon2/src/blake2/blake2b.c' || echo '$(srcdir)/'`../argon2/src/blake2/blake2b.c

../argon2/src/libargon2_la-thread.lo: ../argon2/src/thread.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -MT ../argon2/src/libargon2_la-thread.lo -MD -MP -MF ../argon2/src/$(DEPDIR)/libargon2_la-thread.Tpo -c -o ../argon2/src/libargon2_la-thread.lo `test -f '../argon2/src/thread.c' || echo '$(srcdir)/'`../argon2/src/thread.c
	$(AM_V_at)$(am__mv) ../argon2/src/$(DEPDIR)/libargon2_la-thread.Tpo ../argon2/src/$(DEPDIR)/libargon2_la-thread.Plo
#	$(AM_V_CC)source='../argon2/src/thread.c' object='../argon2/src/libargon2_la-thread.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -c -o ../argon2/src/libargon2_la-thread.lo `test -f '../argon2/src/thread.c' || echo '$(srcdir)/'`../argon2/src/thread.c

../argon2/src/libargon2_la-ref.lo: ../argon2/src/ref.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -MT ../argon2/src/libargon2_la-ref.lo -MD -MP -MF ../argon2/src/$(DEPDIR)/libargon2_la-ref.Tpo -c -o ../argon2/src/libargon2_la-ref.lo `test -f '../argon2/src/ref.c' || echo '$(srcdir)/'`../argon2/src/ref.c
	$(AM_V_at)$(am__mv) ../argon2/src/$(DEPDIR)/libargon2_la-ref.Tpo ../argon2/src/$(DEPDIR)/libargon2_la-ref.Plo
#	$(AM_V_CC)source='../argon2/src/ref.c' object='../argon2/src/libargon2_la-ref.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -c -o ../argon2/src/libargon2_la-ref.lo `test -f '../argon2/src/ref.c' || echo '$(srcdir)/'`../argon2/src/ref.c

../argon2/src/libargon2_la-encoding.lo: ../argon2/src/encoding.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -MT ../argon2/src/libargon2_la-encoding.lo -MD -MP -MF ../argon2/src/$(DEPDIR)/libargon2_la-encoding.Tpo -c -o ../argon2/src/libargon2_la-encoding.lo `test -f '../argon2/src/encoding.c' || echo '$(srcdir)/'`../argon2/src/encoding.c
	$(AM_V_at)$(am__mv) ../argon2/src/$(DEPDIR)/libargon2_la-encoding.Tpo ../argon2/src/$(DEPDIR)/libargon2_la-encoding.Plo
#	$(AM_V_CC)source='../argon2/src/encoding.c' object='../argon2/src/libargon2_la-encoding.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libargon2_la_CFLAGS) $(CFLAGS) -c -o ../argon2/src/libargon2_la-encoding.lo `test -f '../argon2/src/encoding.c' || echo '$(srcdir)/'`../argon2/src/encoding.c

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

libopendht_la-dht.lo: dht.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-dht.lo -MD -MP -MF $(DEPDIR)/libopendht_la-dht.Tpo -c -o libopendht_la-dht.lo `test -f 'dht.cpp' || echo '$(srcdir)/'`dht.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-dht.Tpo $(DEPDIR)/libopendht_la-dht.Plo
#	$(AM_V_CXX)source='dht.cpp' object='libopendht_la-dht.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-dht.lo `test -f 'dht.cpp' || echo '$(srcdir)/'`dht.cpp

libopendht_la-op_cache.lo: op_cache.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-op_cache.lo -MD -MP -MF $(DEPDIR)/libopendht_la-op_cache.Tpo -c -o libopendht_la-op_cache.lo `test -f 'op_cache.cpp' || echo '$(srcdir)/'`op_cache.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-op_cache.Tpo $(DEPDIR)/libopendht_la-op_cache.Plo
#	$(AM_V_CXX)source='op_cache.cpp' object='libopendht_la-op_cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-op_cache.lo `test -f 'op_cache.cpp' || echo '$(srcdir)/'`op_cache.cpp

libopendht_la-node_cache.lo: node_cache.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-node_cache.lo -MD -MP -MF $(DEPDIR)/libopendht_la-node_cache.Tpo -c -o libopendht_la-node_cache.lo `test -f 'node_cache.cpp' || echo '$(srcdir)/'`node_cache.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-node_cache.Tpo $(DEPDIR)/libopendht_la-node_cache.Plo
#	$(AM_V_CXX)source='node_cache.cpp' object='libopendht_la-node_cache.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-node_cache.lo `test -f 'node_cache.cpp' || echo '$(srcdir)/'`node_cache.cpp

libopendht_la-callbacks.lo: callbacks.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-callbacks.lo -MD -MP -MF $(DEPDIR)/libopendht_la-callbacks.Tpo -c -o libopendht_la-callbacks.lo `test -f 'callbacks.cpp' || echo '$(srcdir)/'`callbacks.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-callbacks.Tpo $(DEPDIR)/libopendht_la-callbacks.Plo
#	$(AM_V_CXX)source='callbacks.cpp' object='libopendht_la-callbacks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-callbacks.lo `test -f 'callbacks.cpp' || echo '$(srcdir)/'`callbacks.cpp

libopendht_la-routing_table.lo: routing_table.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-routing_table.lo -MD -MP -MF $(DEPDIR)/libopendht_la-routing_table.Tpo -c -o libopendht_la-routing_table.lo `test -f 'routing_table.cpp' || echo '$(srcdir)/'`routing_table.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-routing_table.Tpo $(DEPDIR)/libopendht_la-routing_table.Plo
#	$(AM_V_CXX)source='routing_table.cpp' object='libopendht_la-routing_table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-routing_table.lo `test -f 'routing_table.cpp' || echo '$(srcdir)/'`routing_table.cpp

libopendht_la-network_engine.lo: network_engine.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-network_engine.lo -MD -MP -MF $(DEPDIR)/libopendht_la-network_engine.Tpo -c -o libopendht_la-network_engine.lo `test -f 'network_engine.cpp' || echo '$(srcdir)/'`network_engine.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-network_engine.Tpo $(DEPDIR)/libopendht_la-network_engine.Plo
#	$(AM_V_CXX)source='network_engine.cpp' object='libopendht_la-network_engine.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-network_engine.lo `test -f 'network_engine.cpp' || echo '$(srcdir)/'`network_engine.cpp

libopendht_la-utils.lo: utils.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-utils.lo -MD -MP -MF $(DEPDIR)/libopendht_la-utils.Tpo -c -o libopendht_la-utils.lo `test -f 'utils.cpp' || echo '$(srcdir)/'`utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-utils.Tpo $(DEPDIR)/libopendht_la-utils.Plo
#	$(AM_V_CXX)source='utils.cpp' object='libopendht_la-utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-utils.lo `test -f 'utils.cpp' || echo '$(srcdir)/'`utils.cpp

libopendht_la-infohash.lo: infohash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-infohash.lo -MD -MP -MF $(DEPDIR)/libopendht_la-infohash.Tpo -c -o libopendht_la-infohash.lo `test -f 'infohash.cpp' || echo '$(srcdir)/'`infohash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-infohash.Tpo $(DEPDIR)/libopendht_la-infohash.Plo
#	$(AM_V_CXX)source='infohash.cpp' object='libopendht_la-infohash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-infohash.lo `test -f 'infohash.cpp' || echo '$(srcdir)/'`infohash.cpp

libopendht_la-node.lo: node.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-node.lo -MD -MP -MF $(DEPDIR)/libopendht_la-node.Tpo -c -o libopendht_la-node.lo `test -f 'node.cpp' || echo '$(srcdir)/'`node.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-node.Tpo $(DEPDIR)/libopendht_la-node.Plo
#	$(AM_V_CXX)source='node.cpp' object='libopendht_la-node.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-node.lo `test -f 'node.cpp' || echo '$(srcdir)/'`node.cpp

libopendht_la-value.lo: value.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-value.lo -MD -MP -MF $(DEPDIR)/libopendht_la-value.Tpo -c -o libopendht_la-value.lo `test -f 'value.cpp' || echo '$(srcdir)/'`value.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-value.Tpo $(DEPDIR)/libopendht_la-value.Plo
#	$(AM_V_CXX)source='value.cpp' object='libopendht_la-value.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-value.lo `test -f 'value.cpp' || echo '$(srcdir)/'`value.cpp

libopendht_la-crypto.lo: crypto.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-crypto.lo -MD -MP -MF $(DEPDIR)/libopendht_la-crypto.Tpo -c -o libopendht_la-crypto.lo `test -f 'crypto.cpp' || echo '$(srcdir)/'`crypto.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-crypto.Tpo $(DEPDIR)/libopendht_la-crypto.Plo
#	$(AM_V_CXX)source='crypto.cpp' object='libopendht_la-crypto.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-crypto.lo `test -f 'crypto.cpp' || echo '$(srcdir)/'`crypto.cpp

libopendht_la-securedht.lo: securedht.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-securedht.lo -MD -MP -MF $(DEPDIR)/libopendht_la-securedht.Tpo -c -o libopendht_la-securedht.lo `test -f 'securedht.cpp' || echo '$(srcdir)/'`securedht.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-securedht.Tpo $(DEPDIR)/libopendht_la-securedht.Plo
#	$(AM_V_CXX)source='securedht.cpp' object='libopendht_la-securedht.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-securedht.lo `test -f 'securedht.cpp' || echo '$(srcdir)/'`securedht.cpp

libopendht_la-dhtrunner.lo: dhtrunner.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-dhtrunner.lo -MD -MP -MF $(DEPDIR)/libopendht_la-dhtrunner.Tpo -c -o libopendht_la-dhtrunner.lo `test -f 'dhtrunner.cpp' || echo '$(srcdir)/'`dhtrunner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-dhtrunner.Tpo $(DEPDIR)/libopendht_la-dhtrunner.Plo
#	$(AM_V_CXX)source='dhtrunner.cpp' object='libopendht_la-dhtrunner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-dhtrunner.lo `test -f 'dhtrunner.cpp' || echo '$(srcdir)/'`dhtrunner.cpp

libopendht_la-default_types.lo: default_types.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-default_types.lo -MD -MP -MF $(DEPDIR)/libopendht_la-default_types.Tpo -c -o libopendht_la-default_types.lo `test -f 'default_types.cpp' || echo '$(srcdir)/'`default_types.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-default_types.Tpo $(DEPDIR)/libopendht_la-default_types.Plo
#	$(AM_V_CXX)source='default_types.cpp' object='libopendht_la-default_types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-default_types.lo `test -f 'default_types.cpp' || echo '$(srcdir)/'`default_types.cpp

libopendht_la-log.lo: log.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-log.lo -MD -MP -MF $(DEPDIR)/libopendht_la-log.Tpo -c -o libopendht_la-log.lo `test -f 'log.cpp' || echo '$(srcdir)/'`log.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-log.Tpo $(DEPDIR)/libopendht_la-log.Plo
#	$(AM_V_CXX)source='log.cpp' object='libopendht_la-log.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-log.lo `test -f 'log.cpp' || echo '$(srcdir)/'`log.cpp

libopendht_la-peer_discovery.lo: peer_discovery.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-peer_discovery.lo -MD -MP -MF $(DEPDIR)/libopendht_la-peer_discovery.Tpo -c -o libopendht_la-peer_discovery.lo `test -f 'peer_discovery.cpp' || echo '$(srcdir)/'`peer_discovery.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-peer_discovery.Tpo $(DEPDIR)/libopendht_la-peer_discovery.Plo
#	$(AM_V_CXX)source='peer_discovery.cpp' object='libopendht_la-peer_discovery.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-peer_discovery.lo `test -f 'peer_discovery.cpp' || echo '$(srcdir)/'`peer_discovery.cpp

libopendht_la-network_utils.lo: network_utils.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-network_utils.lo -MD -MP -MF $(DEPDIR)/libopendht_la-network_utils.Tpo -c -o libopendht_la-network_utils.lo `test -f 'network_utils.cpp' || echo '$(srcdir)/'`network_utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-network_utils.Tpo $(DEPDIR)/libopendht_la-network_utils.Plo
#	$(AM_V_CXX)source='network_utils.cpp' object='libopendht_la-network_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-network_utils.lo `test -f 'network_utils.cpp' || echo '$(srcdir)/'`network_utils.cpp

libopendht_la-thread_pool.lo: thread_pool.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-thread_pool.lo -MD -MP -MF $(DEPDIR)/libopendht_la-thread_pool.Tpo -c -o libopendht_la-thread_pool.lo `test -f 'thread_pool.cpp' || echo '$(srcdir)/'`thread_pool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-thread_pool.Tpo $(DEPDIR)/libopendht_la-thread_pool.Plo
#	$(AM_V_CXX)source='thread_pool.cpp' object='libopendht_la-thread_pool.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-thread_pool.lo `test -f 'thread_pool.cpp' || echo '$(srcdir)/'`thread_pool.cpp

libopendht_la-rng.lo: rng.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-rng.lo -MD -MP -MF $(DEPDIR)/libopendht_la-rng.Tpo -c -o libopendht_la-rng.lo `test -f 'rng.cpp' || echo '$(srcdir)/'`rng.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-rng.Tpo $(DEPDIR)/libopendht_la-rng.Plo
#	$(AM_V_CXX)source='rng.cpp' object='libopendht_la-rng.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-rng.lo `test -f 'rng.cpp' || echo '$(srcdir)/'`rng.cpp

libopendht_la-dht_proxy_server.lo: dht_proxy_server.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-dht_proxy_server.lo -MD -MP -MF $(DEPDIR)/libopendht_la-dht_proxy_server.Tpo -c -o libopendht_la-dht_proxy_server.lo `test -f 'dht_proxy_server.cpp' || echo '$(srcdir)/'`dht_proxy_server.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-dht_proxy_server.Tpo $(DEPDIR)/libopendht_la-dht_proxy_server.Plo
#	$(AM_V_CXX)source='dht_proxy_server.cpp' object='libopendht_la-dht_proxy_server.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-dht_proxy_server.lo `test -f 'dht_proxy_server.cpp' || echo '$(srcdir)/'`dht_proxy_server.cpp

libopendht_la-dht_proxy_client.lo: dht_proxy_client.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-dht_proxy_client.lo -MD -MP -MF $(DEPDIR)/libopendht_la-dht_proxy_client.Tpo -c -o libopendht_la-dht_proxy_client.lo `test -f 'dht_proxy_client.cpp' || echo '$(srcdir)/'`dht_proxy_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-dht_proxy_client.Tpo $(DEPDIR)/libopendht_la-dht_proxy_client.Plo
#	$(AM_V_CXX)source='dht_proxy_client.cpp' object='libopendht_la-dht_proxy_client.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-dht_proxy_client.lo `test -f 'dht_proxy_client.cpp' || echo '$(srcdir)/'`dht_proxy_client.cpp

libopendht_la-base64.lo: base64.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libopendht_la-base64.lo -MD -MP -MF $(DEPDIR)/libopendht_la-base64.Tpo -c -o libopendht_la-base64.lo `test -f 'base64.cpp' || echo '$(srcdir)/'`base64.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libopendht_la-base64.Tpo $(DEPDIR)/libopendht_la-base64.Plo
#	$(AM_V_CXX)source='base64.cpp' object='libopendht_la-base64.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libopendht_la-base64.lo `test -f 'base64.cpp' || echo '$(srcdir)/'`base64.cpp

indexation/libopendht_la-pht.lo: indexation/pht.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT indexation/libopendht_la-pht.lo -MD -MP -MF indexation/$(DEPDIR)/libopendht_la-pht.Tpo -c -o indexation/libopendht_la-pht.lo `test -f 'indexation/pht.cpp' || echo '$(srcdir)/'`indexation/pht.cpp
	$(AM_V_at)$(am__mv) indexation/$(DEPDIR)/libopendht_la-pht.Tpo indexation/$(DEPDIR)/libopendht_la-pht.Plo
#	$(AM_V_CXX)source='indexation/pht.cpp' object='indexation/libopendht_la-pht.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopendht_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o indexation/libopendht_la-pht.lo `test -f 'indexation/pht.cpp' || echo '$(srcdir)/'`indexation/pht.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf ../argon2/src/.libs ../argon2/src/_libs
	-rm -rf ../argon2/src/blake2/.libs ../argon2/src/blake2/_libs
	-rm -rf indexation/.libs indexation/_libs
install-nobase_includeHEADERS: $(nobase_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../argon2/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../argon2/src/$(am__dirstamp)
	-rm -f ../argon2/src/blake2/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../argon2/src/blake2/$(am__dirstamp)
	-rm -f indexation/$(DEPDIR)/$(am__dirstamp)
	-rm -f indexation/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) ../argon2/src/$(DEPDIR) ../argon2/src/blake2/$(DEPDIR) indexation/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) ../argon2/src/$(DEPDIR) ../argon2/src/blake2/$(DEPDIR) indexation/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-nobase_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man \
	install-nobase_includeHEADERS install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-nobase_includeHEADERS

.PRECIOUS: Makefile


clean-local:
	rm -rf libargon2.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
